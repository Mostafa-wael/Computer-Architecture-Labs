

library ieee;
use ieee.std_logic_1164.all;

-- partB module --

-- the interface of the module--
entity partD is
  port (
    a : in std_logic_vector (15 downto 0);
    b : in std_logic_vector (15 downto 0);
    s : in std_logic_vector (1 downto 0);
    cIn : in std_logic;
    cOut : out std_logic;
    f : out std_logic_vector (15 downto 0));

end entity;

-- the implematation of the module--
architecture ALU16 of partD is
begin
  process (s)
  begin
    case s is
        --F=Logic shift left A --
      when "00" =>
        f <=  a(14 downto 0) & '0'; -- add 0 in case of logic shift--
        cOut <= a(15);
        --F=Rotate left A--
      when "01" =>
        f <= a(14 downto 0) & a(15);
        cOut <= a(15);
        --F=Rotate left A with Carry--
      when "10" =>
        f <=  a(14 downto 0) & cIn;
        cOut <= a(15);
        --F = 0000--
      when others => --"11"--
      f <= x"0000";
      cOut <= '0';
    end case;
  end process;
end architecture;